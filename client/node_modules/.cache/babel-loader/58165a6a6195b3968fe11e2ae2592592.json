{"ast":null,"code":"import _slicedToArray from \"/home/chiranz/programming/fullstack/mern/pomodoreEvents/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chiranz/programming/fullstack/mern/pomodoreEvents/client/src/components/TopicList.js\";\nimport React, { useState } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport uuid from \"uuid\";\nexport default function TopicList() {\n  const _useState = useState([{\n    id: uuid(),\n    weight: Math.random(),\n    name: \"Ethereum\",\n    createdAt: new Date()\n  }, {\n    id: uuid(),\n    weight: Math.random(),\n    name: \"Lightening\",\n    createdAt: new Date()\n  }, {\n    id: uuid(),\n    weight: Math.random(),\n    name: \"BTCPay Server\",\n    createdAt: new Date()\n  }, {\n    id: uuid(),\n    weight: Math.random(),\n    name: \"JAMStack\",\n    createdAt: new Date()\n  }, {\n    id: uuid(),\n    weight: Math.random(),\n    name: \"Graphql\",\n    createdAt: new Date()\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        topics = _useState2[0],\n        setTopics = _useState2[1];\n\n  console.log(topics);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"dark\",\n    style: {\n      marginBottom: \"2rem\"\n    },\n    onClick: () => {\n      const name = prompt(\"Enter Topic\");\n\n      if (name) {\n        setTopics([...topics, name]);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Add Topic\"), React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(TransitionGroup, {\n    className: \"topic-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, topics.map(({\n    id,\n    name,\n    createdAt\n  }) => {\n    console.log(name);\n    return React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"remove-btn\",\n      color: \"danger\",\n      size: \"sm\",\n      onClick: () => {\n        const newTopics = topics.filter(topic => topic.id != id);\n        setTopics(newTopics);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"\\xD7\"), name));\n  }))));\n}","map":{"version":3,"sources":["/home/chiranz/programming/fullstack/mern/pomodoreEvents/client/src/components/TopicList.js"],"names":["React","useState","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","uuid","TopicList","id","weight","Math","random","name","createdAt","Date","topics","setTopics","console","log","marginBottom","prompt","map","newTopics","filter","topic"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport uuid from \"uuid\";\n\nexport default function TopicList() {\n  const [topics, setTopics] = useState([\n    {\n      id: uuid(),\n      weight: Math.random(),\n      name: \"Ethereum\",\n      createdAt: new Date()\n    },\n    {\n      id: uuid(),\n      weight: Math.random(),\n      name: \"Lightening\",\n      createdAt: new Date()\n    },\n    {\n      id: uuid(),\n      weight: Math.random(),\n      name: \"BTCPay Server\",\n      createdAt: new Date()\n    },\n    {\n      id: uuid(),\n      weight: Math.random(),\n      name: \"JAMStack\",\n      createdAt: new Date()\n    },\n    {\n      id: uuid(),\n      weight: Math.random(),\n      name: \"Graphql\",\n      createdAt: new Date()\n    }\n  ]);\n  console.log(topics);\n  return (\n    <Container>\n      <Button\n        color=\"dark\"\n        style={{ marginBottom: \"2rem\" }}\n        onClick={() => {\n          const name = prompt(\"Enter Topic\");\n          if (name) {\n            setTopics([...topics, name]);\n          }\n        }}\n      >\n        Add Topic\n      </Button>\n      <ListGroup>\n        <TransitionGroup className=\"topic-list\">\n          {topics.map(({ id, name, createdAt }) => {\n            console.log(name);\n            return (\n              <CSSTransition key={id} timeout={500}>\n                <ListGroupItem>\n                  <Button\n                    className=\"remove-btn\"\n                    color=\"danger\"\n                    size=\"sm\"\n                    onClick={() => {\n                      const newTopics = topics.filter(topic => topic.id != id);\n                      setTopics(newTopics);\n                    }}\n                  >\n                    &times;\n                  </Button>\n                  {name}\n                </ListGroupItem>\n              </CSSTransition>\n            );\n          })}\n        </TransitionGroup>\n      </ListGroup>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}