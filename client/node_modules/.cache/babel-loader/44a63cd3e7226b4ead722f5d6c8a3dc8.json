{"ast":null,"code":"import _slicedToArray from \"/home/chiranz/programming/fullstack/mern/pomodoreEvents/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chiranz/programming/fullstack/mern/pomodoreEvents/client/src/components/TopicList.js\";\nimport React, { useState } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport uuid from \"uuid\";\nexport default function TopicList() {\n  const _useState = useState([{\n    id: uuid(),\n    weight: Math.floor(Math.random() * 20),\n    name: \"Ethereum\",\n    createdAt: new Date()\n  }, {\n    id: uuid(),\n    weight: Math.floor(Math.random() * 20),\n    name: \"Lightening\",\n    createdAt: new Date()\n  }, {\n    id: uuid(),\n    weight: Math.floor(Math.random() * 20),\n    name: \"BTCPay Server\",\n    createdAt: new Date()\n  }, {\n    id: uuid(),\n    weight: Math.floor(Math.random() * 20),\n    name: \"JAMStack\",\n    createdAt: new Date()\n  }, {\n    id: uuid(),\n    weight: Math.floor(Math.random() * 20),\n    name: \"Graphql\",\n    createdAt: new Date()\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        topics = _useState2[0],\n        setTopics = _useState2[1];\n\n  console.log(topics);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"dark\",\n    style: {\n      marginBottom: \"2rem\"\n    },\n    onClick: () => {\n      const name = prompt(\"Enter Topic\");\n\n      if (name) {\n        const topic = {\n          id: uuid(),\n          weight: Math.floor(Math.random() * 20),\n          name,\n          createdAt: new Date()\n        };\n        setTopics([...topics, topic]);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Add Topic\"), React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(TransitionGroup, {\n    className: \"topic-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, topics.map(({\n    id,\n    name,\n    createdAt\n  }) => React.createElement(CSSTransition, {\n    key: id,\n    timeout: 500,\n    className: \"fade-topic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(ListGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"remove-btn\",\n    color: \"danger\",\n    size: \"sm\",\n    onClick: () => {\n      const newTopics = topics.filter(topic => topic.id !== id);\n      setTopics(newTopics);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"\\xD7\"), name))))));\n}","map":{"version":3,"sources":["/home/chiranz/programming/fullstack/mern/pomodoreEvents/client/src/components/TopicList.js"],"names":["React","useState","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","uuid","TopicList","id","weight","Math","floor","random","name","createdAt","Date","topics","setTopics","console","log","marginBottom","prompt","topic","map","newTopics","filter"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport uuid from \"uuid\";\n\nexport default function TopicList() {\n  const [topics, setTopics] = useState([\n    {\n      id: uuid(),\n      weight: Math.floor(Math.random() * 20),\n      name: \"Ethereum\",\n      createdAt: new Date()\n    },\n    {\n      id: uuid(),\n      weight: Math.floor(Math.random() * 20),\n      name: \"Lightening\",\n      createdAt: new Date()\n    },\n    {\n      id: uuid(),\n      weight: Math.floor(Math.random() * 20),\n      name: \"BTCPay Server\",\n      createdAt: new Date()\n    },\n    {\n      id: uuid(),\n      weight: Math.floor(Math.random() * 20),\n      name: \"JAMStack\",\n      createdAt: new Date()\n    },\n    {\n      id: uuid(),\n      weight: Math.floor(Math.random() * 20),\n      name: \"Graphql\",\n      createdAt: new Date()\n    }\n  ]);\n  console.log(topics);\n  return (\n    <Container>\n      <Button\n        color=\"dark\"\n        style={{ marginBottom: \"2rem\" }}\n        onClick={() => {\n          const name = prompt(\"Enter Topic\");\n          if (name) {\n            const topic = {\n              id: uuid(),\n              weight: Math.floor(Math.random() * 20),\n              name,\n              createdAt: new Date()\n            };\n            setTopics([...topics, topic]);\n          }\n        }}\n      >\n        Add Topic\n      </Button>\n      <ListGroup>\n        <TransitionGroup className=\"topic-list\">\n          {topics.map(({ id, name, createdAt }) => (\n            <CSSTransition key={id} timeout={500} className=\"fade-topic\">\n              <ListGroupItem>\n                <Button\n                  className=\"remove-btn\"\n                  color=\"danger\"\n                  size=\"sm\"\n                  onClick={() => {\n                    const newTopics = topics.filter(topic => topic.id !== id);\n                    setTopics(newTopics);\n                  }}\n                >\n                  &times;\n                </Button>\n                {name}\n              </ListGroupItem>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </ListGroup>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}