{"ast":null,"code":"var _jsxFileName = \"/home/chiranz/programming/fullstack/mern/pomodoreEvents/client/src/components/TopicList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport uuid from \"uuid\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getItems } from \"../actions/topicActions\";\nexport default function TopicList() {\n  const topics = useSelector(state => state.topic);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getItems());\n  }, []);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"dark\",\n    style: {\n      marginBottom: \"2rem\"\n    },\n    onClick: () => {\n      const name = prompt(\"Enter Topic\");\n\n      if (name) {\n        const topic = {\n          id: uuid(),\n          weight: Math.floor(Math.random() * 20),\n          name,\n          createdAt: new Date()\n        };\n        return;\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Add Topic\"), React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(TransitionGroup, {\n    className: \"topic-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, topics.map(({\n    id,\n    name,\n    createdAt\n  }) => React.createElement(CSSTransition, {\n    key: id,\n    timeout: 500,\n    className: \"fade-topic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(ListGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"remove-btn\",\n    color: \"danger\",\n    size: \"sm\",\n    onClick: () => {\n      const newTopics = topics.filter(topic => topic.id !== id);\n      console.log(newTopics);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"\\xD7\"), name))))));\n}","map":{"version":3,"sources":["/home/chiranz/programming/fullstack/mern/pomodoreEvents/client/src/components/TopicList.js"],"names":["React","useState","useEffect","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","uuid","useSelector","useDispatch","getItems","TopicList","topics","state","topic","dispatch","marginBottom","name","prompt","id","weight","Math","floor","random","createdAt","Date","map","newTopics","filter","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,aAA/B,EAA8CC,MAA9C,QAA4D,YAA5D;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,yBAAzB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAMC,MAAM,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA1B;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACAT,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACL,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,KAAK,EAAE;AAAEM,MAAAA,YAAY,EAAE;AAAhB,KAFT;AAGE,IAAA,OAAO,EAAE,MAAM;AACb,YAAMC,IAAI,GAAGC,MAAM,CAAC,aAAD,CAAnB;;AACA,UAAID,IAAJ,EAAU;AACR,cAAMH,KAAK,GAAG;AACZK,UAAAA,EAAE,EAAEZ,IAAI,EADI;AAEZa,UAAAA,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAFI;AAGZN,UAAAA,IAHY;AAIZO,UAAAA,SAAS,EAAE,IAAIC,IAAJ;AAJC,SAAd;AAMA;AACD;AACF,KAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAmBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,MAAM,CAACc,GAAP,CAAW,CAAC;AAAEP,IAAAA,EAAF;AAAMF,IAAAA,IAAN;AAAYO,IAAAA;AAAZ,GAAD,KACV,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEL,EAApB;AAAwB,IAAA,OAAO,EAAE,GAAjC;AAAsC,IAAA,SAAS,EAAC,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,IAAI,EAAC,IAHP;AAIE,IAAA,OAAO,EAAE,MAAM;AACb,YAAMQ,SAAS,GAAGf,MAAM,CAACgB,MAAP,CAAcd,KAAK,IAAIA,KAAK,CAACK,EAAN,KAAaA,EAApC,CAAlB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAYGV,IAZH,CADF,CADD,CADH,CADF,CAnBF,CADF;AA4CD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport uuid from \"uuid\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getItems } from \"../actions/topicActions\";\n\nexport default function TopicList() {\n  const topics = useSelector(state => state.topic);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getItems());\n  }, []);\n  return (\n    <Container>\n      <Button\n        color=\"dark\"\n        style={{ marginBottom: \"2rem\" }}\n        onClick={() => {\n          const name = prompt(\"Enter Topic\");\n          if (name) {\n            const topic = {\n              id: uuid(),\n              weight: Math.floor(Math.random() * 20),\n              name,\n              createdAt: new Date()\n            };\n            return;\n          }\n        }}\n      >\n        Add Topic\n      </Button>\n      <ListGroup>\n        <TransitionGroup className=\"topic-list\">\n          {topics.map(({ id, name, createdAt }) => (\n            <CSSTransition key={id} timeout={500} className=\"fade-topic\">\n              <ListGroupItem>\n                <Button\n                  className=\"remove-btn\"\n                  color=\"danger\"\n                  size=\"sm\"\n                  onClick={() => {\n                    const newTopics = topics.filter(topic => topic.id !== id);\n                    console.log(newTopics);\n                  }}\n                >\n                  &times;\n                </Button>\n                {name}\n              </ListGroupItem>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </ListGroup>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}